/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package avishkar;



import static avishkar.webtrending.tcodechef;
import static avishkar.webtrending.tcodeforces;
import static avishkar.webtrending.thackerrank;
import static avishkar.webtrending.tspoj;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.lang.ClassNotFoundException;
/**
 *
 * @author rohit
 */
public class user extends javax.swing.JFrame {

    /**
     * Creates new form user
     * @throws java.io.IOException
     */
    public String userhandle;
    public user(String a) throws IOException, SQLException 
    {
            initComponents();
            
         
            
            userhandle = a;
            luser.setText(userhandle);
            
            
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
        }
            Connection c1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/avishkar", "root","rohit@dell1");
            
            
            PreparedStatement stmt = c1.prepareStatement("select * from rank where username = ?");
            stmt.setString(1,userhandle);
            ResultSet rs  = stmt.executeQuery();
            
            if(rs.next())
            {
           ccrank.setText(Integer.toString(rs.getInt(3)));
           cfrank.setText(Integer.toString(rs.getInt(4)));
           srank.setText(Integer.toString(rs.getInt(2)));
            }
           
            herank.setText("ranks are not public");
            tfhrrank.setText("Does not support Rank System");
            
       
                    
        }
    public void kunal()
      {
           
        try {
            tcodechef();
            tcodeforces();
             tspoj();
                    thackerrank();
       
        } catch (IOException ex) {
            Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
}
    
    
    public user()
    {
        
    }
        
        
        
     
        
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hrrank = new javax.swing.JPanel();
        lspoj = new javax.swing.JLabel();
        lhrrank = new javax.swing.JLabel();
        lherank = new javax.swing.JLabel();
        lccrank = new javax.swing.JLabel();
        lcfrank = new javax.swing.JLabel();
        srank = new javax.swing.JTextField();
        herank = new javax.swing.JTextField();
        ccrank = new javax.swing.JTextField();
        cfrank = new javax.swing.JTextField();
        leader = new javax.swing.JButton();
        tfhrrank = new javax.swing.JTextField();
        luser = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        trending = new javax.swing.JButton();
        upcoming = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lspoj.setText("SPOJ  RANK");

        lhrrank.setText("HACKER-RANK RANK");

        lherank.setText("HACKER-EARTH RANK");

        lccrank.setText("CODE-CHEF RANK");

        lcfrank.setText("CODE-FORCES RANK");

        leader.setText("LEADER BOARD");
        leader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaderActionPerformed(evt);
            }
        });

        tfhrrank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfhrrankActionPerformed(evt);
            }
        });

        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        trending.setText("Trending Problem");
        trending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trendingActionPerformed(evt);
            }
        });

        upcoming.setText("Upcoming Contest");

        javax.swing.GroupLayout hrrankLayout = new javax.swing.GroupLayout(hrrank);
        hrrank.setLayout(hrrankLayout);
        hrrankLayout.setHorizontalGroup(
            hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hrrankLayout.createSequentialGroup()
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hrrankLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(refresh))
                    .addGroup(hrrankLayout.createSequentialGroup()
                        .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(hrrankLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(luser, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(hrrankLayout.createSequentialGroup()
                                        .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lspoj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lcfrank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lherank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lccrank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lhrrank, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(44, 44, 44)
                                        .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfhrrank, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(herank)
                                                .addComponent(ccrank)
                                                .addComponent(cfrank)
                                                .addComponent(srank, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(hrrankLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(leader, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(trending, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(upcoming, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 102, Short.MAX_VALUE)))
                .addContainerGap())
        );
        hrrankLayout.setVerticalGroup(
            hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hrrankLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refresh)
                .addGap(22, 22, 22)
                .addComponent(luser, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lspoj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lhrrank, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfhrrank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lherank, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(herank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lccrank, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccrank, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lcfrank, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cfrank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(upcoming, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addGroup(hrrankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(trending, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(leader, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(hrrank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(hrrank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaderActionPerformed
leaderboard k = new leaderboard();
k.setVisible(true);
this.setVisible(false);

        
// TODO add your handling code here:
    }//GEN-LAST:event_leaderActionPerformed

    private void tfhrrankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfhrrankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfhrrankActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
    

// TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void trendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trendingActionPerformed

        try {
            treding k = new treding();
            k.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
        }
       

    }//GEN-LAST:event_trendingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new user(" ").setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(user.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch(SQLException e)
            {
            }
        });
    }
    
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ccrank;
    private javax.swing.JTextField cfrank;
    private javax.swing.JTextField herank;
    private javax.swing.JPanel hrrank;
    private javax.swing.JLabel lccrank;
    private javax.swing.JLabel lcfrank;
    private javax.swing.JButton leader;
    private javax.swing.JLabel lherank;
    private javax.swing.JLabel lhrrank;
    private javax.swing.JLabel lspoj;
    private javax.swing.JLabel luser;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField srank;
    private javax.swing.JTextField tfhrrank;
    private javax.swing.JButton trending;
    private javax.swing.JButton upcoming;
    // End of variables declaration//GEN-END:variables
}
